import express from "express";
import cors from "cors";
import { exec } from "child_process";
import fileUpload from 'express-fileupload'
import fs from "fs";


const app = express();
app.use(express.json());
app.use(fileUpload());
app.use(cors());


var fileName = '';
var command = '';
var fileNameJSON = '';

app.post('/execute', (req, res) => {
    console.log(req.body);

    fileNameJSON = req.body.fileName;

    if (!fileNameJSON) {
        res.json({
            server: "Server: Отправьте файл на сервер!",
        });
        return;

    }

    if (req.body.arch == "x64") {
        console.log(req.body.arch, " 64");

        if (req.body.target !== "") {
            command = `DII_client_DR\\win64\\bin64\\drltrace -logdir . -- ./files/${fileNameJSON} ${req.body.nextCommand} files/${req.body.target}`;
            console.log(command);
          
        }
        else {
        command = `DII_client_DR\\win64\\bin64\\drltrace -logdir . -- ./files/${fileNameJSON}`;
        console.log(command);
        }
    }
    else if (req.body.arch == "x32") {
        if (req.body.target !== "") {
            command = `DII_client_DR\\win32\\bin\\drltrace -logdir . -- ./files/${fileNameJSON} ${req.body.nextCommand} files/${req.body.target}`;
            console.log(command);
   
        }
        else {
             console.log(req.body.arch,"  32");
             command = `DII_client_DR\\win32\\bin\\drltrace -logdir . -- ./files/${fileNameJSON}`;
             console.log(command);
        }
    }
    else {
        res.json({
            server: "Server: Выбирите разрядность ВПО!",
        });
        return;
    }

    exec(command, (error, stdout, stderr) => {
        if (error !== null) {
            console.log(`error: ${error.message}`);
            fileName = error.message;
            return;
        }
        if (stderr !== null) {
            console.log(`stderr: ${stderr}`);
            fileName = stderr;
            return;
        }
        console.log(`stdout: ${stdout}`);
    });

    res.json({
        server: "Server: Клиент DynamoRio успешно закончил процесс динамического анализа ВПО",
    });

});



app.get('/execute', (req, res) => {
    console.log("result start");
    var helper = `drltrace.${fileNameJSON}.\\d{1,}.\\d{1,}.log`;
    var currentFN = fileName.match(helper);
    console.log('currentFN', currentFN[0]);
    const file_reader = fs.readFileSync(currentFN[0], "utf-8")
    //console.log(file_reader);

    res.json({
        server: file_reader,
    });

});
app.post('/upload', async (req, res) => {
    console.log("upload start");
    if (!req.files) {
        //  return res.status(400).send("No files were uploaded.");
        res.json({
            server: "Server: No files were uploaded.",
        });
        return;
    }
    const file = req.files.file;
    const path = "./files/" + file.name;

    file.mv(path, (err) => {
        if (err) {
            //  return res.status(500).send(err);
        }
        res.json({
            server: "Server: Файл загружен на сервер",
        });
    });


})




app.listen(3001, (err) => {

    if (err) {
        return console.log(err);
    }

    console.log("Start Server")
});